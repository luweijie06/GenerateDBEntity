<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.dev.gear.GenerateDBEntity</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>GenerateDBEntity</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="1397100450@qq.com">DevGear</vendor>
    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
<h2>Database-Driven Class Generator</h2>

<p>This powerful IntelliJ IDEA plugin streamlines the process of creating Java classes from database tables, offering a wide range of customization options to suit your project needs.</p>

<h3>Key Features:</h3>
<ul>
  <li><strong>Database Connection:</strong> Configure and test your database connection directly within the IDE.</li>
  <li><strong>Flexible Annotation Support:</strong> Choose between no annotations, JPA annotations, or MyBatis-Plus annotations for your generated classes.</li>
  <li><strong>Custom Type Mappings:</strong> Define and manage custom SQL to Java type mappings to ensure your classes match your project's conventions.</li>
  <li><strong>Package Selection:</strong> Easily select the target package for your generated classes from your project structure.</li>
  <li><strong>Lombok Integration:</strong> Option to use Lombok annotations for cleaner, more concise code.</li>
  <li><strong>Base Class Support:</strong> Specify a base class for all generated entities to extend.</li>
  <li><strong>Field Exclusion:</strong> Define common fields to be excluded from all generated classes.</li>
  <li><strong>Persistence:</strong> All your configuration settings are saved, so you don't need to reconfigure for each use.</li>
</ul>

<h3>How to Use:</h3>
<ol>
  <li>Open the plugin settings (File > Settings > Tools > Database Configuration)</li>
  <li>Configure your database connection details and test the connection</li>
  <li>Set your preferred annotation style, base class, and target package</li>
  <li>Customize type mappings and excluded fields as needed</li>
  <li>Apply settings and generate classes from your database tables!</li>
</ol>

<h3>Configuration Options:</h3>
<ul>
  <li><strong>Database Connection:</strong> Host, Port, Database name, Username, and Password</li>
  <li><strong>Annotation Options:</strong> No annotations, JPA annotations, or MyBatis-Plus annotations</li>
  <li><strong>Base Class:</strong> Specify a common base class for all generated entities</li>
  <li><strong>Package Selection:</strong> Choose from available packages in your project</li>
  <li><strong>Lombok:</strong> Toggle Lombok annotation usage</li>
  <li><strong>Type Mappings:</strong> Customize SQL to Java type conversions</li>
  <li><strong>Excluded Fields:</strong> Specify common fields to be excluded from all generated classes</li>
</ul>

<p>Boost your productivity and maintain consistency in your database-driven Java projects with this comprehensive class generation tool!</p>
]]></description>
    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
       <!-- 注册 DatabaseSettings 服务 -->
        <projectService serviceImplementation="com.dev.gear.DatabaseSettings"/>

        <!-- 注册 DatabaseConfigDialog 配置页面 -->
        <projectConfigurable groupId="tools" displayName="Database Entity Generator"
                             id="com.dev.gear.DatabaseConfigDialog"
                             instance="com.dev.gear.DatabaseConfigDialog"/>
    </extensions>
    <actions>
        <action id="com.dev.gear.GenerateEntityAction"
            class="com.dev.gear.GenerateEntityAction"
            text="Generate DB Entity from Database"
            description="Generate entity classes from database tables">
            <add-to-group group-id="GenerateGroup" anchor="last"/>

            <!-- 这里配置快捷键 -->
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift I"/>
      </action>
    </actions>
</idea-plugin>